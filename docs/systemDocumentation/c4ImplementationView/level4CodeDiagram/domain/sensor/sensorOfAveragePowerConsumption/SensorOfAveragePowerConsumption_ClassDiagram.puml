@startuml

title Sensor Of Average Power Consumption\nDomain Class Diagram - Component\nSystem / BackEnd / Domain\n(Implementation View Level 4)


/' As Product Owner, I want the system to have a type of sensor that gives the
average power consumption over a period (W).'/

interface Sensor {
    + getIdentity() : SensorId
    + getSensorModelName() : SensorModelName
    + getValue() : Value
    + getDeviceId() : DeviceId
}

class SensorId {
    - sensorId : String
    + SensorId(...)
    + getSensorId() : String
}

interface Value {
    + valueToString() : String
}

class AveragePowerConsumptionValue {
    - averagePowerConsumptionValue : double
    + AveragePowerConsumptionValue(...)
    + valueToString() : String
}

class SensorModelName {
    - sensorModelName : String
    + SensorModelName(...)
    + getSensorModelName() : String
}

class SensorType {
    + SensorType(...)
    + getIdentity() : SensorTypeId
    + getSensorTypeName() : SensorTypeName
    + getSensorTypeUnit() : SensorTypeUnit
}

class SensorTypeName {
    - sensorTypeName : String
    + SensorTypeName(...)
    + getSensorTypeName() : String
}

class SensorTypeUnit {
    - sensorTypeUnit : String
    + SensorTypeUnit(...)
    + getSensorTypeUnit() : String
}

class SensorModel {
    + SensorModel(...)
    + getIdentity() : SensorModelName
    + getSensorTypeId() : SensorTypeId
}

class SensorTypeId {
    - sensorTypeId : String
    + SensorTypeId(...)
    + getSensorTypeId() : String
}

class DeviceId {
    - deviceId : String
    + DeviceId(...)
    + getIdentity() : String
}

interface ISensorRepository {
    + save(...) : Sensor
    + findAll() : Iterable<Sensor>
    + findByIdentity(...) : Optional<Sensor>
    + containsIdentity(...) : boolean
    + findSensorsByDeviceId(...) : Iterable<Sensor>
    + findSensorsByDeviceIdAndSensorModelName(...) : Iterable<Sensor>
    + findSensorIdsByDeviceIdAndSensorModelName(...) : Iterable<SensorId>
}

interface ISensorTypeRepository {
    + save(...) : SensorType
    + findAll() : Iterable<SensorType>
    + findByIdentity(...) : Optional<SensorType>
    + containsIdentity(...) : boolean
    + findSensorTypeIds() : Iterable<SensorTypeId>
}

interface ISensorModelRepository {
    + save(...) : SensorModel
    + findAll() : Iterable<SensorModel>
    + findByIdentity(...) : Optional<SensorModel>
    + containsIdentity(...) : boolean
    + findSensorModelsBySensorTypeId(...) : Iterable<SensorModel>
    + findSensorModelNamesBySensorTypeId(...) : Iterable<SensorModelName>
}

class SensorOfAveragePowerConsumption {
    + SensorOfAveragePowerConsumption(...)
    + getIdentity() : SensorId
    + getSensorModelName() : SensorModelName
    + getValue() : Value
    + getDeviceId() : DeviceId
}

Value <|.. AveragePowerConsumptionValue : implements

SensorOfAveragePowerConsumption .up.|> Sensor : implements
SensorOfAveragePowerConsumption *-- "1" SensorId : contains
SensorOfAveragePowerConsumption *-r- "1" Value : contains
SensorOfAveragePowerConsumption ..> SensorModelName : knows
SensorOfAveragePowerConsumption .l> DeviceId : knows

SensorModel *-- "1" SensorModelName : contains
SensorModel ..> SensorTypeId : knows

SensorType *-- "1" SensorTypeId: contains
SensorType *-- "1" SensorTypeName : contains
SensorType *-- "1" SensorTypeUnit : contains
SensorType "*" -u-* ISensorTypeRepository : contains

ISensorRepository *- "*" Sensor : contains
ISensorModelRepository *-d- "*" SensorModel : contains

@enduml